@using IMRepo.Models.Domain;
@model Office
@using IMRepo.Utilities;
@{
    ViewData["ModelTitle"] = ModelsTexts.Office.title;
    var isEditable = (bool)(ViewData["UpdateAvailable"] ?? false);
}

<form id="FormOffice" asp-action=@ViewData["Action"] class="mt-2" asp-route-returnUrl="@ViewBag.returnUrl" asp-route-bufferedUrl="@ViewBag.bufferedUrl">
    @await Html.PartialAsync("/Views/Shared/JaosLib/_ResultMessages.cshtml",ViewData)
    <!-- CAPTURE OFFICE PROPERTIES -->
    @if ((int)(ViewData["ModelId"] ?? 0) > 0)
    {
        <input type="hidden" asp-for="Id" />
    }
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
    </div>
    <div class="row">
        <div class="col-sm-9">
            <div  class="form-control"id="divName">
                <label asp-for="Name" class="control-label" title=@ModelsTexts.Office.NameDescription></label>
                <input asp-for="Name" type="text" >
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
    </div>
    <!-- capture office properties -->
    <span data-model="Office"></span>
    @await Html.PartialAsync("/Views/Shared/JaosLib/_FormFooter.cshtml",ViewData)
</form>
<!-- end of office form -->
@section Scripts { @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");} }

<script>
    @* Disable capture fields to Display Office *@
    const x = @((!isEditable).ToString().ToLower());
    document.getElementById('Name').disabled = x;
</script>
